{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","newFilter","handelFilterChange","value","onChange","PersonForm","props","onSubmit","addPerson","newName","handelNameChange","newNumber","handelNumberChange","type","Persons","personToShow","deletePerson","map","person","name","number","onClick","_id","Notification","message","className","content","baseUrl","personService","getAll","axios","get","then","response","data","createItem","newObject","post","deleteItem","id","delete","updateItem","put","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","showAll","setShowAll","setMessage","useEffect","initialPersons","filter","toLowerCase","includes","event","target","length","preventDefault","checkPerson","find","window","confirm","changePerson","returnedPerson","setTimeout","catch","error","personObject","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c70be11.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ newFilter, handelFilterChange }) => {\n  return (\n    <div>\n      filter shown with <input value={newFilter} onChange={handelFilterChange}/>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name: <input value={props.newName} onChange={props.handelNameChange}/>\n      </div>\n      <div>\n        number: <input value={props.newNumber} onChange={props.handelNumberChange}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ personToShow, deletePerson }) => {\n  return (\n    personToShow.map(person => {\n      return (\n        <div key={person._id}>\n          <span>{person.name} {person.number} </span>\n          <button onClick={() => deletePerson(person)}>delete</button>\n        </div>\n      )\n    })\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className={`notification ${message.type}`}>\n      {message.content}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst createItem = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteItem = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst updateItem = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst personService = { getAll, createItem, deleteItem, updateItem }\n\nexport default personService","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [ message, setMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const personToShow = showAll\n    ? persons\n    : persons.filter(person =>\n        person.name.toLowerCase().includes(newFilter.toLowerCase())\n      )\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const checkPerson = persons.find(person => person.name === newName)\n    if (checkPerson) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const changePerson = { ...checkPerson, number: newNumber }\n        personService\n          .updateItem(checkPerson.id, changePerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== checkPerson.id ? person : returnedPerson))\n            setMessage({\n              content: `Upgrade ${returnedPerson.name} success`,\n              type: 'success'\n            })\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setMessage({\n              content: `Information of ${newName} has already been removed from server`,\n              type: 'error'\n            })\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n      }\n    } else {\n      const personObject = { name: newName, number: newNumber }\n      personService\n        .createItem(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setMessage({\n            content: `Add ${returnedPerson.name} success`,\n            type: 'success'\n          })\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n  const deletePerson = target => {\n    if (window.confirm(`Delete ${target.name} ?`)) {\n      personService\n        .deleteItem(target._id)\n        .then(() => {\n          setPersons(persons.filter(person => person._id !== target._id))\n          setMessage({\n            content: `Delete ${target.name} success`,\n            type: 'success'\n          })\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setPersons(persons.filter(person => person._id !== target._id))\n          setMessage({\n            content: `Information of ${newName} has already been removed from server`,\n            type: 'error'\n          })\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n  \n  const handelNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handelNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handelFilterChange = (event) => {\n    setNewFilter(event.target.value)\n    if (event.target.value.length > 0) {\n      setShowAll(false)\n    } else {\n      setShowAll(true)\n    }\n  }\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter newFilter={newFilter} handelFilterChange={handelFilterChange} />\n      <h3>add a new</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handelNameChange={handelNameChange}\n        handelNumberChange={handelNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons personToShow={personToShow} deletePerson={deletePerson} />\n    </>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}